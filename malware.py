import os
import bcrypt
import time
import psutil
import json

def get_pid(process_name):
      for proc in psutil.process_iter():
        if proc.name() == process_name:
            return proc.pid

# # folder = r'C:\Users\user\Desktop\FIAP\LAB_501\reserva\\'
# # file_name = 'teste.txt'
# folder = r'C:\Users\user\Desktop\FIAP\LAB_501\FinalCry\\'
# file_name = 'planilha.csv'
# # folder = r"C:\Users\user\Desktop\FIAP\LAB_501\Testes\SecurityFolder_2\\"
# # file_name = 'tysaedyqu.html'

# while True:
#     # time.sleep(1)
#     pid = os.getpid()
#     print('----------------')

#     source = folder + file_name
#     encrypted = bcrypt.hashpw(source.encode('utf8'), bcrypt.gensalt(5))
    
#     with open(source, 'r+') as f:
#         f.truncate(0)
#         f.write(encrypted.decode('utf8'))
#         f.close()
        
#     print(pid)

json_file = open(r'C:\Program Files (x86)\Spectre\securityFolders.json')
json_str = json_file.read()
json_data = json.loads(json_str)

ghostFiles = []
for folder in json_data:
    ghostFiles.append(folder['folderPath'] + '\\' + folder['fullFileName'])

while True:
    for file in ghostFiles:
        # time.sleep(1)
        pid = os.getpid()
        print('----------------')
        print(file)

        encrypted = bcrypt.hashpw(file.encode('utf8'), bcrypt.gensalt(5))

        with open(file, 'r+') as f:
            f.truncate(0)
            f.write(encrypted.decode('utf8'))
            f.close()
            
        print(pid)








# with open("planilha.csv", "a+") as file_object:
#     file_object.seek(0)
#     data = file_object.read(100)
#     if len(data) > 0 :
#         file_object.write("\n")
#     file_object.write("Teste")
    
# https://python-watchdog.readthedocs.io/en/stable/api.html
# http://timgolden.me.uk/pywin32-docs/win32evtlog.html
# https://www.netwrix.com/how_to_detect_who_tried_to_change_file_or_folder_on_your_file_servers.html
# https://superuser.com/questions/1052541/how-can-i-get-a-history-of-running-processes
